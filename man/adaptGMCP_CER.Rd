% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cerAdaptGMCP_Analysis.R
\name{adaptGMCP_CER}
\alias{adaptGMCP_CER}
\title{Function to perform Adaptive GMCP Analysis following Combined P-Value(Inverse Normal) method}
\usage{
adaptGMCP_CER(
  nArms = 3,
  nEps = 2,
  SampleSize = 500,
  EpType = list(EP1 = "Continuous", EP2 = "Binary"),
  sigma = list(EP1 = c(1, 1.1, 1.2), EP2 = NA),
  CommonStdDev = FALSE,
  prop.ctr = list(EP1 = NA, EP2 = 0.2),
  allocRatio = c(1, 1, 1),
  WI = c(0.5, 0.5, 0, 0),
  G = matrix(c(0, 0.5, 0.5, 0, 0.5, 0, 0, 0.5, 0, 1, 0, 0, 1, 0, 0, 0), nrow = nEps *
    (nArms - 1), byrow = T),
  test.type = "Partly-Parametric",
  alpha = 0.025,
  info_frac = c(0.5, 1),
  typeOfDesign = "asOF",
  AdaptStage2 = TRUE,
  plotGraphs = TRUE
)
}
\arguments{
\item{nArms}{Number of Arms}

\item{nEps}{Number of End points}

\item{SampleSize}{Plan Sample Size}

\item{EpType}{list of endpoint types (options : "Continuous","Binary")}

\item{sigma}{Arm-Wise sigma for each endpoint(for EpType = "Continuous")}

\item{CommonStdDev}{TRUE = the treatment standard deviations assumed to be same as the control, FALSE = the treatment standard deviations assumed to be same as given in sigma.}

\item{prop.ctr}{proportion for control arm for each endpoint(for EpType = "Binary")}

\item{allocRatio}{Arm-Wise allocation ratio}

\item{WI}{Vector of Initial Weights for Global Null(default = \code{rep(1/4,4)})}

\item{G}{Transition Matrix (default = \code{matrix(c(0,1/3,1/3,1/3,  1/3,0,1/3,1/3, 1/3,1/3,0,1/3, 1/3,1/3,1/3,0),nrow = 4)})}

\item{test.type}{Character to specify the type of test want to perform; "Parametric": Weighted Dunnett , "Non-Parametric": Weighted Bonferroni and  'Partly-Parametric': Mixed type Tests.}

\item{alpha}{Type-1 error}

\item{info_frac}{Vector of information fraction}

\item{typeOfDesign}{The type of design. Type of design is one of the following: O'Brien & Fleming ("OF"), Pocock ("P"), Wang & Tsiatis Delta class ("WT"), Pampallona & Tsiatis ("PT"), Haybittle & Peto ("HP"), Optimum design within Wang & Tsiatis class ("WToptimum"), O'Brien & Fleming type alpha spending ("asOF"), Pocock type alpha spending ("asP"), Kim & DeMets alpha spending ("asKD"), Hwang, Shi & DeCani alpha spending ("asHSD"), no early efficacy stop ("noEarlyEfficacy"), default is "OF".}

\item{AdaptStage2}{TRUE: Adaptation option will be given for stage-2, FALSE : proceed as planned.}

\item{plotGraphs}{TRUE: plot intermediate graphs}
}
\description{
Function to perform Adaptive GMCP Analysis following Combined P-Value(Inverse Normal) method
}
\examples{
#######################################################################
###############   Script to Run CER Analysis examples #################
#######################################################################

library(AdaptGMCP)

########################## Inputs ##############################
#-----------------------Total Sample Size------------------------
SampleSize <- 360

#-----------------------Design Alpha------------------------
alpha <- 0.025

#-----------------------Number of Arms------------------------
#Note: Including Control Arm
nArms <- 3

#-------------------Number of Endpoints------------------------
nEps  <- 2

#------------------list with endpoint types--------------------
# List containing the endpoint types
# Options : "Continuous", "Binary"
EpType <- list("EP1" = "Continuous",
               "EP2"="Binary")

#-------------Arm-Wise planned Std. Dev. for each endpoints-----
# List containing the arm-wise(continuous) standard deviations
# The First input is for the control arm
# Not required for test.type = 'Non-Parametric' or endpoint type as "Binary"
sigma <- list("EP1" = c(1, 1, 1),
              "EP2" = NA)

#-------------proportion for control arm-------------------
# List containing the Control Arm(Binary) Proportions
# Not required for test.type = 'Non-Parametric' or endpoint type as "Continuous"
prop.ctr <- list("EP1" = NA,
                "EP2" = 0.2)

#-----------------------Arm-Wise Allocation Ratio------------------------
# Vector of length = nArms
# Not required for test.type = 'Non-Parametric'
allocRatio <- c(1,1,1)

#----------------Initial Weights---------------------
#The number of hypothesis=(nEps*(nArms-1)) is same as the length of WI
WI <-  c(0.5,0.5,0,0)

#---------------Transition Matrix--------------------
#The dimension of the matrix is (Number of Hypothesis x Number of Hypothesis)
G <- matrix(c(0,1/2,1/2,0,
              1/2,0,0,1/2,
              0,1,0,0,
              1,0,0,0),
            nrow = nEps*(nArms-1), byrow = TRUE)

#----------------Information Fraction----------------
#The number of lookes is same as the length of info_frac(for FSD info_frac = 1)
info_frac <- c(0.5,1)

#-------------------Boundary Type-------------------
# O'Brien & Fleming = 'OF', Pocock = 'P', Wang & Tsiatis Delta class = 'WT'
# Pampallona & Tsiatis = 'PT', Haybittle & Peto = 'HP',
# Optimum design within Wang & Tsiatis class = 'WToptimum'
# O'Brien & Fleming type alpha spending = 'asOF', Pocock type alpha spending = 'asP'
# Kim & DeMets alpha spending = 'asKD', Hwang, Shi & DeCani alpha spending = 'asHSD'
# no early efficacy stop = 'noEarlyEfficacy'
# default is "asOF"

typeOfDesign <- 'asOF'

#-------------------Test Type------------------------
# Testing Procedure
# options = 'Parametric', 'Partly-Parametric', 'Non-Parametric'
# Note: For parametric tests the the number of endpoints must be 1, whereas for partly parametric case it has to be greater than 1
test.type <- 'Parametric'


#-------------------Adaptation Flag------------------------
# AdaptStage2 : TRUE = Adaptation options will be given after stage-1
AdaptStage2 <- TRUE

#-------------------Plot Intermediate Graphs------------------------
plotGraphs <- TRUE

#--------------Run Analysis--------------------------
###For Interim-look inputs follow the R console#####
#Please uncomment the following code to run the Analysis(short-cut to uncomment 1.Select the lines, 2.ctr+shift+c)
#
#
# adaptGMCP_CER(nArms = nArms, nEps = nEps, EpType = EpType,
#               sigma = sigma, prop.ctr = prop.ctr, allocRatio = allocRatio,
#               SampleSize = SampleSize, alpha = alpha, WI = WI,
#               G = G, info_frac = info_frac, typeOfDesign = typeOfDesign,
#               test.type = test.type, AdaptStage2 = AdaptStage2,
#               plotGraphs = plotGraphs)
}
